{"version":3,"sources":["TodoContext.js","components/TodoCreate.js","components/TodoHead.js","components/TodoItem.js","components/TodoList.js","components/TodoTemplate.js","App.js","reportWebVitals.js","index.js"],"names":["initialTodos","id","text","done","todoReducer","state","action","type","concat","todo","map","filter","Error","TodoStateContext","createContext","TodoDispatchContext","TodoNextIdContext","TodoProvider","children","useReducer","dispatch","nextId","useRef","Provider","value","useTodoState","context","useContext","useTodoDispatch","CircleButton","styled","button","props","open","css","InsertFormTemplate","div","InsertForm","form","Input","input","TodoCreate","useState","setOpen","setValue","useTodoNextId","onSubmit","e","preventDefault","current","placeholder","autoFocus","onChange","target","onClick","React","memo","TodoHeadBlock","TodoHead","undoneTasks","todos","today","Date","dateString","toLocaleDateString","year","month","day","dayName","weekday","className","length","CheckCircle","Text","Remove","TodoItemBlock","TodoItem","TodoListBlock","TodoList","TodoTemplateBlock","TodoTemplate","GlobalStyle","createGlobalStyle","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.288f827f.chunk.js","sourcesContent":["import React, { createContext, useReducer ,useContext,useRef } from 'react';\n\nconst initialTodos= [\n    {\n        id: 1,\n        text: '아르바이트 하기',\n        done: true,\n    }, {\n        id: 2,\n        text: '코딩하기',\n        done: true,\n    }, {\n\n        id: 3,\n        text: '망고 산책시키기',\n        done: true,\n    }, {\n\n        id: 4,\n        text: '7시 30분 필라테스',\n        done: false,\n    }];\n\n    function todoReducer(state, action) {\n        switch (action.type) {\n\n            case 'CREATE':\n                return state.concat(action.todo);\n\n            case 'TOGGLE':\n                 // map은 모든 todo에 대하여 변환\n                return state.map(\n                    todo => todo.id === action.id ? { ...todo,done: !todo.done} :todo\n                ) ;\n\n            case 'REMOVE':\n                return state.filter(todo => todo.id !== action.id)\n                \n             default:\n             throw new Error(`Unhandled action type : ${action.type}`);\n            }\n    }\n\nconst TodoStateContext = createContext();\nconst TodoDispatchContext = createContext();\nconst TodoNextIdContext= createContext();\n\n\n\n\nexport function TodoProvider ({children}){\n const [state, dispatch] = useReducer(todoReducer,initialTodos);\n const nextId =useRef(5);\n\n return (\n    <TodoStateContext.Provider value ={state}>\n        <TodoDispatchContext.Provider value = {dispatch}>\n            <TodoNextIdContext.Provider value ={nextId}>\n            {children}\n            </TodoNextIdContext.Provider>\n        </TodoDispatchContext.Provider>\n    </TodoStateContext.Provider >\n\n );\n    }\n    export function useTodoState() {\n  const context = useContext(TodoStateContext);\n  if (!context) {\n    throw new Error('Cannot find TodoProvider');\n  }\n  return context;\n}\n\nexport function useTodoDispatch() {\n  const context = useContext(TodoDispatchContext);\n  if (!context) {\n    throw new Error('Cannot find TodoProvider');\n  }\n  return context;\n}\n\nexport function useTodoNextId() {\n  const context = useContext(TodoNextIdContext);\n  if (!context) {\n    throw new Error('Cannot find TodoProvider');\n  }\n  return context;\n}\n","import React,{useState} from 'react';\nimport styled, { css } from 'styled-components';\nimport { MdAdd } from 'react-icons/md';\nimport { useTodoDispatch, useTodoNextId } from '../TodoContext';\n\n\nconst CircleButton = styled.button`\n background:#38d9a9;\n &:hover{\n     background:#63e6be;\n }\n &:active{\n     background:#20c997;\n }\n box-sizing: border-box;\n z-index:5;\n cursor: pointer;\n width:50px;\n height:50px;\n display:flex;\n align-items:center;\n justify-content:center;\n\n position:absolute;\n left:50%;\n bottom:0px;\n transform : translate(-50%,50%);\n\n font-size:60px;\n color:white;\n border-radius:40px;\n\n border:none;\n outline:none;\n \ntransition: 0.125s all ease-in ;\n \n${props =>\n props.open &&\n css`\n background:#ff6b6b;\n\n &:hover{\n     background:#ff8787;\n }\n &:active{\n     background:#fa5252;\n }\n transform: translate(-50%, 50%) rotate(45deg);\n`} \n\n`;\n\nconst InsertFormTemplate = styled.div`\n width:100%;\n bottom: 0;\n left:0;\n position:absolute;\n`;\n\nconst InsertForm = styled.form`\n background:#f8f9fa;\n padding:32px;\n padding-bottom:72px;\n border-bottom-left-radius:16px;\n border-bottom-right-radius:16px;\n border-top: 1px solid #e9ecef;\n`;\n\n\nconst Input = styled.input`\n    padding: 12px;\n    border-radius:4px;\n    border:1px solid #dee2e6;\n    width:100%;\n    outline:none;\n    font-size:18px;\n    box-sizing:border-box;\n`;\n\n\n\nfunction TodoCreate(){\n    const[open, setOpen ]= useState(false);\n    const[value, setValue] =useState('');\n    const dispatch = useTodoDispatch();\n    const nextId = useTodoNextId();\n\n\n    const onToggle =() => setOpen(!open);\n    const onChange = e => setValue(e.target.value);\n    const onSubmit = e => {\n        e.preventDefault();\n        // 새로고침방지\n        dispatch({\n            type:'CREATE',\n            todo:{\n              id:nextId.current,\n              text:value,\n              done:false,\n            }\n        });\n        setValue('');\n        setOpen(false);\n        nextId.current +=1;\n        // 추가\n    }\n    return (\n        <>\n        {open && (\n            <InsertFormTemplate>\n                <InsertForm onSubmit ={onSubmit}>\n                    <Input placeholder=\"할 일을 입력후 Enter를 누르세요\" autoFocus\n                    onChange={onChange}\n                    value={value}\n                    />\n                    </InsertForm>\n            </InsertFormTemplate>\n\n        )}\n        <CircleButton onClick ={onToggle} open={open}>\n           \n            < MdAdd />\n        </CircleButton>\n        </>\n\n    );\n}\n\nexport default React.memo(TodoCreate);\n// 성능 최적화 react.memo","import React from 'react';\n// import { MdOpenWith } from 'react-icons/md';\nimport styled from 'styled-components';\nimport { useTodoState } from '../TodoContext';\n\nconst TodoHeadBlock = styled.div`\n padding-top:48px;\n padding-left:32px;\n padding-right:32px;\n padding-bottom:24px;\n border-bottom:1px solid #e9ecef ;\n\n    h1{\n        margin:0;\n        font-size:36px;\n        color: #343a40;\n;    }\n    .day{\n        margin-top:4px;\n        color:#868e96;\n        font-size:21px;\n\n    }\n    .tasks-left {\n        color: #20c997;\n        font-size :18px;\n        margin-top :40px;\n        font-weight :bold;\n    }\n`;\n\nfunction TodoHead() {\n    const todos = useTodoState();\n    const undoneTasks = todos.filter(todos => !todos.done);\n\n    const today = new Date ();\n    const dateString = today.toLocaleDateString('ko-KR',{\n    year: 'numeric',\n    month:'long',\n    day:'numeric'\n});\n    const dayName =today.toLocaleDateString('ko-KR',{\n        weekday:'long'\n    })\n    \n    \n    return(\n        <TodoHeadBlock>\n            <h1> {dateString}</h1>\n            <div className=\"day\">{dayName}</div>\n            <div className= \"tasks-left\">할일 {undoneTasks.length}개 남음</div>\n        </TodoHeadBlock>\n    )\n}\n\n\nexport default TodoHead; ","import React from 'react';\nimport styled, {css} from 'styled-components';\nimport {MdDone, MdDelete} from 'react-icons/md';\nimport {useTodoDispatch } from '../TodoContext';\n// useTodo, \n\n\nconst CheckCircle = styled.div`\n width:32px;\n height:32px;\n border-radius: 16px;\n border:1px solid #ced4da;\n font-size:24px;\n display:flex;\n align-items:center;\n justify-content:center;\n margin-right:20px;\n cursor: pointer;\n ${props => \n  props.done && \n  css`\n  border:1px solid #38d9a9;\n  color:#38d9a9;\n `}\n`;\nconst Text = styled.div`\nflex:1;\nfont-size:20px;\ncolor:#495057;\n${props => props.done &&\ncss`\n color:#ced4da;\n`}\n`;\n\nconst Remove= styled.div`\n opacity :0;\n /* 안보인다 */\n display:flex;\n align-items:center;\n justify-content:center;\n color:#dee2e6;\n font-size:24px;\n cursor: pointer;\n &:hover{\n     color:#ff6b6b;\n }\n`;\n\nconst TodoItemBlock = styled.div`\n display:flex;\n align-items:center ;\n padding-top:12px;\n padding-bottom:12px;\n &:hover{\n     ${Remove}{\n         opacity:1;\n     }\n }\n`;\n\nfunction TodoItem ({ id, done, text }){\n const dispatch = useTodoDispatch();\n const onToggle =()=> \n   dispatch({\n        type:'TOGGLE',\n        id\n    });\n const onRemove=() => \n  dispatch ({\n        type:'REMOVE',\n        id\n    });\n\n\n    return (\n    <TodoItemBlock>\n        <CheckCircle done={done} onClick={onToggle}>\n            {done && <MdDone/>}\n        </CheckCircle>\n        <Text done ={done}>{text}</Text>\n        <Remove onClick ={onRemove }>\n            <MdDelete/>\n        </Remove>\n    </TodoItemBlock>\n\n    )\n}\n\nexport default React.memo (TodoItem);","import React from 'react';\nimport styled from 'styled-components';\nimport { useTodoState } from '../TodoContext';\nimport TodoItem from './TodoItem';\n\nconst TodoListBlock = styled.div`\n flex: 1;\n /* 제일 많이 차지함 */\n padding:20px 32px;\n padding-bottom:48px;\n overflow-y:auto;\n /* background:gray; */\n`;\n\nfunction TodoList(){\n    const todos = useTodoState();\n\n    return (\n        <TodoListBlock>\n            {todos.map (todo => (\n             <TodoItem\n                key={todo.id}\n                id={todo.id}\n                text={todo.text}\n                done={todo.done}\n            />\n            ))}\n        </TodoListBlock>\n    );\n}\n\nexport default TodoList;","import React from 'react';\nimport styled from 'styled-components';\n\n\nconst TodoTemplateBlock = styled.div`\n    width: 400px;\n    height: 650px;\n    position : relative; \n    background: white;\n    border-radius:16px;\n    box-shadow: 0 0 8px rgba(0,0,0,0.04);\n    margin: 0 auto;\n    margin-top: 96px;\n    margin-bottom:32px;\n    display:flex;\n    flex-direction: column;\n\n`;\n\nfunction TodoTemplate ({ children }) {\n    return <TodoTemplateBlock>{ children }</TodoTemplateBlock>;\n}\n\nexport default TodoTemplate;\n\n","import React from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport TodoCreate from './components/TodoCreate';\nimport TodoHead from './components/TodoHead';\nimport TodoList from './components/TodoList';\nimport TodoTemplate from './components/TodoTemplate';\nimport { TodoProvider } from './TodoContext';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n   background: #e9ecef;\n  }\n`;\n\nfunction App() {\n  return (\n  <TodoProvider>\n    <GlobalStyle />\n    <TodoTemplate> \n      <TodoHead/>\n      <TodoList/>\n      <TodoCreate/>\n      </TodoTemplate>\n  </TodoProvider>\n  \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}